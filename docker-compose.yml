version: '3'

services:
  db:
    image: postgres:alpine
    ports:
      - '5432:5432'
    container_name: 'dashboard-company-db'
    restart: always
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: db  

  api:
    container_name: dashboard-company-api
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    ports:
      - '8000:8000'
    depends_on:
      - db    
    volumes:
      - ./api:/home/node/api
      - /home/node/api/node_modules

  # web:
  #   container_name: dashboard-company-web
  #   image: dashboard-company-web
  #   environment:
  #     - JWT_SECRET=${JWT_SECRET}
  #     - NODE_ENV=${NODE_ENV}
  #     - REACT_APP_API_URL=${REACT_APP_API_URL}
  #     - REACT_APP_TOKEN=${REACT_APP_TOKEN}
  #   build:
  #     context: .
  #     dockerfile: ./docker/web.Dockerfile
  #   volumes:
  #     - .:/web
  #     - /web/node_modules
  #   ports:
  #     - 3001:3001
  #   depends_on:
  #     - api

volumes:
  pg-data:
  